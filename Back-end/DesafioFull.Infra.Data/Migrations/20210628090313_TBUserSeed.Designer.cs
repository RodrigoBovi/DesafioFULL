// <auto-generated />
using System;
using DesafioFull.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioFull.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210628090313_TBUserSeed")]
    partial class TBUserSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioFull.Domain.Entities.DebtInstallment", b =>
                {
                    b.Property<int>("DebtInstallmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DebtSecurityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DUE_DATE");

                    b.Property<decimal>("InstallmentAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("INSTALLMENT_AMOUNT");

                    b.HasKey("DebtInstallmentId");

                    b.HasIndex("DebtSecurityId");

                    b.ToTable("TB_DEBT_INSTALLMENT");
                });

            modelBuilder.Entity("DesafioFull.Domain.Entities.DebtSecurity", b =>
                {
                    b.Property<int>("DebtSecurityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DebtorCPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DEBTOR_CPF");

                    b.Property<string>("DebtorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DEBTOR_NAME");

                    b.Property<decimal>("InterestPercent")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("INTEREST_PERCENT");

                    b.Property<decimal>("PenaltyPercent")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PENALTY_PERCENT");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DebtSecurityId");

                    b.HasIndex("UserId");

                    b.ToTable("TB_DEBT_SECURITY");
                });

            modelBuilder.Entity("DesafioFull.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("UserId");

                    b.ToTable("TB_USER");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@desafio.com.br",
                            Password = "KjEo+ecA5SzwlfY//yGOgVI0XwFBBAcgJ2R7RtJi/5tE6Y08NyGGVBuwU/ZRICoM",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("DesafioFull.Domain.Entities.DebtInstallment", b =>
                {
                    b.HasOne("DesafioFull.Domain.Entities.DebtSecurity", "DebtSecurity")
                        .WithMany("DebtInstallments")
                        .HasForeignKey("DebtSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DebtSecurity");
                });

            modelBuilder.Entity("DesafioFull.Domain.Entities.DebtSecurity", b =>
                {
                    b.HasOne("DesafioFull.Domain.Entities.User", "User")
                        .WithMany("DebtSecuritys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DesafioFull.Domain.Entities.DebtSecurity", b =>
                {
                    b.Navigation("DebtInstallments");
                });

            modelBuilder.Entity("DesafioFull.Domain.Entities.User", b =>
                {
                    b.Navigation("DebtSecuritys");
                });
#pragma warning restore 612, 618
        }
    }
}
